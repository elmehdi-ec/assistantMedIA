import os
import streamlit as st
import pandas as pd
import requests

st.set_page_config(page_title="Assistant IA M√©dical", layout="wide")

st.title("üß† Assistant IA M√©dical")
st.markdown("Version : **1.0.0** ‚Äî Mode : **IA**")

# === TOKEN ===
HF_TOKEN = os.getenv("HF_TOKEN")
DEMO_MODE = HF_TOKEN is None

# Affichage de l‚Äô√©tat du token
if DEMO_MODE:
    st.warning("üîê Mode d√©mo activ√© ‚Äî aucun token Hugging Face d√©tect√©.")
else:
    st.success(f"üîê Token Hugging Face d√©tect√©. D√©but : `{HF_TOKEN[:4]}...`")

# === Donn√©es ===
data = pd.DataFrame([
    {"Nom": "Ahmed", "√Çge": 65, "Sexe": "Homme", "Sympt√¥mes": "Fi√®vre, toux, essoufflement", "Gravit√©": 8},
    {"Nom": "Salma", "√Çge": 32, "Sexe": "Femme", "Sympt√¥mes": "C√©phal√©e, douleur oreille", "Gravit√©": 3},
    {"Nom": "Youssef", "√Çge": 74, "Sexe": "Homme", "Sympt√¥mes": "Confusion, chute r√©cente", "Gravit√©": 9},
    {"Nom": "Imane", "√Çge": 19, "Sexe": "Femme", "Sympt√¥mes": "Maux gorge, fi√®vre", "Gravit√©": 4},
])

st.subheader("üìã Cas cliniques")
st.dataframe(data, use_container_width=True)

# === R√©sum√©s IA ===
def generate_summary(row):
    prompt = f"Patient de {row['√Çge']} ans, {row['Sexe']}, pr√©sente les sympt√¥mes suivants : {row['Sympt√¥mes']}. G√©n√®re un r√©sum√© clinique."
    headers = {"Authorization": f"Bearer {HF_TOKEN}"}
    payload = {"inputs": prompt}

    try:
        response = requests.post(
            "https://api-inference.huggingface.co/models/google/flan-t5-base",
            headers=headers,
            json=payload,
            timeout=15
        )
        response.raise_for_status()
        return response.json()[0]["generated_text"]
    except Exception as e:
        st.error(f"‚ùå Erreur IA : {e}")
        return "Erreur IA"

if st.button("üß† G√©n√©rer les r√©sum√©s IA"):
    if DEMO_MODE:
        st.warning("Le mode d√©mo est activ√©. D√©finissez HF_TOKEN pour activer l‚ÄôIA.")
    else:
        st.info("Envoi des cas au moteur IA...")
        data["R√©sum√© IA"] = data.apply(generate_summary, axis=1)
        st.success("‚úÖ R√©sum√©s g√©n√©r√©s !")
        st.dataframe(data, use_container_width=True)

# === Export CSV ===
st.download_button(
    label="üì• T√©l√©charger les cas enrichis (.csv)",
    data=data.to_csv(index=False).encode("utf-8"),
    file_name="cas_cliniques_avec_resumes.csv",
    mime="text/csv",
)
